on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: Create release

jobs:
  build:
    name: Build pkg
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
          cache-dependency-path: yarn.lock
      - name: Create <.env> file
        run: |
          touch .env
          echo TEST_ARS=${{ secrets.TEST_ARS }} >> .env
      - name: Build
        run: |
          yarn -y && yarn build && yarn start
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: ars
          path: build
          retention-days: 3
  releaser:
    name: Bump+CL+release
    runs-on: ubuntu-latest
    needs: build
    outputs:
      status: ${{ steps.release.outputs.releases_created }}
      minor: ${{ steps.release.outputs.minor }}
      major: ${{ steps.release.outputs.major }}
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: ars
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          default-branch: main
          token: ${{ secrets.GITHUB_TOKEN }}
          package-name: ars
#          path: src
          pull-request-title-pattern: "chore${scope}: to release${component} ${version}"
          pull-request-header: ":robot: I have created a release"
      - name: check
        run: |
          echo "status -> ${{ steps.release.outputs.releases_created }}"
#      - id: status
#        run: |
#          echo "status=${{ steps.release.outputs.release_created }}" >> "$GITHUB_OUTPUT"
#          echo "minor=${{ steps.release.outputs.minor }}" >> "$GITHUB_OUTPUT"
#          echo "major=${{ steps.release.outputs.major }}" >> "$GITHUB_OUTPUT"
  publish:
    name: publication to repo
    runs-on: ubuntu-latest
    needs: releaser
    if: ${{ needs.releaser.outputs.status }}
    steps:
      - name: test by prev output job variables
        run: |
          echo "release-please:\n\n1 release_created: ${{ needs.releaser.outputs.status }}"
          echo "2 tag: ${{ needs.releaser.outputs.tag_name }}"
          echo "3 commit: ${{ needs.releaser.outputs.sha }}"
          echo "4 PR: ${{ needs.releaser.outputs.pr }}"
